parameters:
  - name: targetRegion
    type: string
    default: ""

stages:
  - stage: condition_deploy_status_ring_0
    displayName: ðŸ©º Release Health Check for ${{ parameters.targetRegion }} Environment
    dependsOn: ["init", "release_ring_0"]
    condition: |
      and(
        eq(dependencies.release_ring_0.result, 'Succeeded'),
        ne('${{ parameters.targetRegion }}', '')
      )
    pool:
      name: "Azure Pipelines"
      vmImage: "ubuntu-latest"
    jobs:
      - job: cache_torremo_library
        displayName: "Cache Torremo Library"
        variables:
          TORREMO_LIB_LATEST_VERSION: $[ stageDependencies.init.download_cache_torremo_library.outputs['fetch_latest_release_tag.LATEST_VERSION'] ]
        steps:
          - task: Cache@2
            displayName: "Cache Torremo Library"
            inputs:
              key: '"torremo" | "$(Agent.OS)" | "$(TORREMO_LIB_LATEST_VERSION)"'
              path: "$(TORREMO_LIB_CACHE_FOLDER)/"

      - job: Argo_Application_Health_Check
        dependsOn: cache_torremo_library
        steps:
          - bash: |
              echo "Calling Argo Application Health Check"
            displayName: "Argo Application Health Check"

          - task: torremo-beta@1.0.41
            displayName: setParamsToFile
            inputs:
              stepName: "setParamsToFile"
              flags: "--teamIdentifier $(TEAM_IDENTIFIER) --appName $(APP_NAME) --artifactVersion $(ARTIFACT_VERSION)"

          - task: torremo-beta@1.0.41
            displayName: validateDeploy
            inputs:
              stepName: "validateDeploy"

      - job: Dynatrace_Synthetic_Monitor_Smoke_Test
        dependsOn: cache_torremo_library
        steps:
          - bash: |
              echo "Calling Dynatrace Synthetic Monitor Smoke Test ..."
            displayName: "Dynatrace Synthetic Monitor Smoke Test"
