# release-integration.yml
parameters:
  - name: teamIdentifier
    type: string
    default: ""
  - name: appName
    type: string
    default: ""
  - name: targetRegion
    type: string
    default: ""
  - name: artifactVersion
    type: string
    default: ""
  - name: ghRepoUri
    type: string
    default: ""

stages:
  - stage: condition_deploy_status_ring_0
    displayName: ðŸ©º Release Health Check for ${{ parameters.targetRegion }} Environment
    dependsOn: ["release_ring_0"]
    condition: |
      and(
        eq(dependencies.release_ring_0.result, 'Succeeded'),
        ne('${{ parameters.targetRegion }}', ''),
        ne('${{ parameters.teamIdentifier }}', ''),
        ne('${{ parameters.appName }}', ''),
        ne('${{ parameters.artifactVersion }}', ''),
        ne('${{ parameters.ghRepoUri }}', '')
      )
    pool:
      name: "Azure Pipelines"
      vmImage: "ubuntu-latest"
    jobs:
      - job: Argo_Application_Health_Check
        steps:
          - checkout: self
          - bash: |
              echo "Calling Argo Application Health Check"
            displayName: "Argo Application Health Check"
      - job: Dynatrace_Synthetic_Monitor_Smoke_Test
        steps:
          - checkout: self
          - bash: |
              echo "Calling Dynatrace Synthetic Monitor Smoke Test ..."
            displayName: "Dynatrace Synthetic Monitor Smoke Test"
