# release-integration.yml
parameters:
  - name: teamIdentifier
    type: string
    default: ""
  - name: appName
    type: string
    default: ""
  - name: targetRegion
    type: string
    default: ""
  - name: artifactVersion
    type: string
    default: ""
  - name: ghRepoUri
    type: string
    default: ""
  - name: skipStage
    type: boolean
    default: false

stages:
  - stage: release_ring_0
    displayName: ðŸš€ Release ${{ parameters.targetRegion }} Environment
    condition: |
      and(
        eq('${{ parameters.skipStage }}', 'false'),
        ne('${{ parameters.targetRegion }}', ''),
        ne('${{ parameters.teamIdentifier }}', ''),
        ne('${{ parameters.appName }}', ''),
        ne('${{ parameters.artifactVersion }}', ''),
        ne('${{ parameters.ghRepoUri }}', '')
      )
    pool:
      name: "Azure Pipelines"
      vmImage: "ubuntu-latest"
    jobs:
      - job: Gitops_Deploy
        steps:
          - checkout: self
          - bash: |
              script_content=$(curl -sL -H "Authorization: token $(GH_TOKEN)" \
                "https://github.com/api/v3/repos/manganellidev/custom-sdp-pipeline-azure/contents/scripts/set-config-file.sh" | \
                jq -r .content | base64 -d)

              if [[ -z "$script_content" ]]; then
                echo "Error: Failed to retrieve script content."
                exit 1
              fi

              appName="${{ parameters.appName }}"
              artifactVersion="${{ parameters.artifactVersion }}"
              targetRegion="${{ parameters.targetRegion }}"
              teamIdentifier="${{ parameters.teamIdentifier }}"
              ghRepoUri="${{ parameters.ghRepoUri }}"

              echo "$script_content" | bash -s -- "$appName" "$artifactVersion" "$targetRegion" "$teamIdentifier" "$ghRepoUri"
            displayName: "Set Config File"
          - bash: |
              script_content=$(curl -sL -H "Authorization: token $(GH_TOKEN)" \
                "https://github.com/api/v3/repos/manganellidev/custom-sdp-pipeline-azure/contents/scripts/gitops.sh" | \
                jq -r .content | base64 -d)

              if [[ -z "$script_content" ]]; then
                echo "Error: Failed to retrieve script content."
                exit 1
              fi

              ghToken=$(GH_TOKEN) 
              ghEmail=$(GH_EMAIL) 
              ghUsername=$(GH_USERNAME)

              echo "$script_content" | bash -s -- "$ghToken" "$ghEmail" "$ghUsername"
            displayName: "Deploy"
